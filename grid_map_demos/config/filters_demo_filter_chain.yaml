grid_map_filters:
  ros__parameters:

    input_topic: /grid_map
    output_topic: /filtered_map

    filters:
      filter1:
        name: buffer_normalizer
        type: gridMapFilters/BufferNormalizerFilter

      # filter2: # Duplicate layer.
      #   name: duplicate
      #   type: gridMapFilters/DuplicationFilter
      #   params:
      #     input_layer: ...
      #     output_layer: ...

      filter2:  # Delete color layer.
        name: delete_original_layers
        type: gridMapFilters/DeletionFilter
        params: 
          layers: [color] # List of layers.

      filter3:  # Fill holes in the map with inpainting.
        name: inpaint
        type: gridMapCv/InpaintFilter
        params:
          input_layer: elevation
          output_layer: elevation_inpainted
          radius: 0.05

      filter4:  # Reduce noise with a radial blurring filter.
        name: mean_in_radius
        type: gridMapFilters/MeanInRadiusFilter
        params:
          input_layer: elevation_inpainted
          output_layer: elevation_smooth
          radius: 0.06

      # filter5:  # Boxblur as an alternative to the inpaint and radial blurring filter above.
      #   name: boxblur
      #   type: gridMapFilters/SlidingWindowMathExpressionFilter
      #   params:
      #     input_layer: elevation
      #     output_layer: elevation_smooth
      #     expression: meanOfFinites(elevation)
      #     compute_empty_cells: true
      #     edge_handling: crop # options: inside, crop, empty, mean
      #     window_size: 5 # optional

      filter5:  # Compute surface normals.
        name: surface_normals
        type: gridMapFilters/NormalVectorsFilter
        params:
          input_layer: elevation_inpainted
          output_layers_prefix: normal_vectors_
          radius: 0.05
          normal_vector_positive_axis: z

      filter6:  # Add a color layer for visualization based on the surface normal.
        name: normal_color_map
        type: gridMapFilters/NormalColorMapFilter
        params:
          input_layers_prefix: normal_vectors_
          output_layer: normal_color

      filter7:  # Compute slope from surface normal.
        name: slope
        type: gridMapFilters/MathExpressionFilter
        params:
          output_layer: slope
          expression: acos(normal_vectors_z)

      filter8:  # Compute roughness as absolute difference from map to smoothened map.
        name: roughness
        type: gridMapFilters/MathExpressionFilter
        params:
          output_layer: roughness
          expression: abs(elevation_inpainted - elevation_smooth)

      filter9:  # Edge detection by computing the standard deviation from slope.
        name: edge_detection
        type: gridMapFilters/SlidingWindowMathExpressionFilter
        params:
          input_layer: slope
          output_layer: edges
          expression: sqrt(sumOfFinites(square(slope - meanOfFinites(slope))) ./ numberOfFinites(slope)) # Standard deviation
          compute_empty_cells: false
          edge_handling: crop # options: inside, crop, empty, mean
          window_length: 0.05

      # filter11: # Edge detection on elevation layer with convolution filter as alternative to filter above.
      #   name: edge_detection
      #   type: gridMapFilters/SlidingWindowMathExpressionFilter
      #   params:
      #     input_layer: elevation_inpainted
      #     output_layer: edges
      #     expression: 'sumOfFinites([0,1,0;1,-4,1;0,1,0].*elevation_inpainted)' # Edge detection.
      #     # expression: 'sumOfFinites([0,-1,0;-1,5,-1;0,-1,0].*elevation_inpainted)' # Sharpen.
      #     compute_empty_cells: false
      #     edge_handling: mean # options: inside, crop, empty, mean
      #     window_size: 3 # Make sure to make this compatible with the kernel matrix.

      filter10: # Compute traversability as normalized weighted sum of slope and roughness.
        name: traversability
        type: gridMapFilters/MathExpressionFilter
        params:
          output_layer: traversability
          expression: 0.5 * (1.0 - (slope / 0.6)) + 0.5 * (1.0 - (roughness / 0.1))

      filter11:  # Set lower threshold on traversability.
        name: traversability_lower_threshold
        type: gridMapFilters/ThresholdFilter
        params:
          layer: traversability
          lower_threshold: 0.0
          set_to: 0.0

      filter12:  # Set upper threshold on traversability.
        name: traversability_upper_threshold
        type: gridMapFilters/ThresholdFilter
        params:
          layer: traversability
          upper_threshold: 1.0
          set_to: 1.0 # Other uses: .nan, .inf
